- name: Disable nodejs old version
  ansible.builtin.command: "dnf module disable nodejs -y"
- name: Enable nodejs 20 version
  ansible.builtin.command: "dnf module enable nodejs:20 -y"
- name: Installing Node Js
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql
- name: Creating Expense user
  ansible.builtin.user:
    name: expense

- name: include from common roles
  include_role:
    name: common
    tasks_from: main
# - name: Create App Directory
#   ansible.builtin.file:
#     name: /app
#     state: directory
# - name: Download the backend code.
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip
# - name: Unzipping backend code
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes
- name: Install Dependencies
  community.general.npm:
    path: /app
- name: Copying Backend Service file
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
- name: installing Python libs
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
    - cryptography
    - PyMySQL
- name: Importing mysql data
  community.mysql.mysql_db:
    state: import
    name: all
    login_user: "{{ MYSQL_USER}}"
    login_password: "{{ MYSQL_PASSWORD }}"
    login_host: "{{ MYSQL_HOST }}"
    target: /app/schema/backend.sql
- name: deamon reload and restart backend
  ansible.builtin.systemd_service:
    enabled: true
    state: restarted
    daemon_reload: true
    name: backend